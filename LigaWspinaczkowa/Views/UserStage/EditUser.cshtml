@using Microsoft.AspNetCore.Identity;
@model LigaWspinaczkowa.Models.UserStage
@inject Microsoft.AspNetCore.Identity.UserManager<ApplicationUser> _userManager
@{
    string userId = _userManager.GetUserId(User);
}
@{
    ViewData["Title"] = "Edycja przejścia";
    List<string> listaMaxValue=new List<string>();
    var maxValue = Model.Stage.Name;
    if(maxValue!=null)
    {
        listaMaxValue = maxValue.Split(';').ToList();
    }

}

<h1>Wprowadź swoje przejście w rozdaniu</h1>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="EditUser">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <div class="form-group">
                <label asp-for="StageId" class="control-label"></label>
                <select asp-for="StageId" style="pointer-events: none;" class="form-control" asp-items="ViewBag.StageId"></select>
                <span asp-validation-for="StageId" class="text-danger"></span>
            </div>
            @* <div class="form-group">
                <label asp-for="DateRoute1" class="control-label"></label>
                <input asp-for="DateRoute1" type="date" class="form-control" />
                <span asp-validation-for="DateRoute1" class="text-danger"></span>
            </div> *@
            <div class="form-group">                
                <label asp-for="Route1Points" class="control-label"></label>
                <h7>
                    @if (listaMaxValue.Count > 0)
                    {
                        <span>Maksymalna ilość punktów: <strong>@listaMaxValue[0]</strong></span>
                    }
                </h7>
                @if (Model.IsAcceptedRoute1)
                {
                    <input asp-for="Route1Points" readonly class="form-control" />
                } else {
                    <input asp-for="Route1Points" class="form-control" />
                }

                <span asp-validation-for="Route1Points" class="text-danger"></span>
            </div>
            <div style="display: none;" class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="IsAcceptedRoute1" /> @Html.DisplayNameFor(model => model.IsAcceptedRoute1)
                </label>
            </div>
            @* <div class="form-group">
                <label asp-for="DateRoute2" class="control-label"></label>
                <input asp-for="DateRoute2" type="date" class="form-control" />
                <span asp-validation-for="DateRoute2" class="text-danger"></span>
            </div> *@
            <div class="form-group">
                <label asp-for="Route2Points" class="control-label"></label>
                <h7>
                    @if (listaMaxValue.Count > 1)
                    {
                        <span>Maksymalna ilość punktów: <strong>@listaMaxValue[1]</strong></span>
                    }
                </h7>
                @if (Model.IsAcceptedRoute2)
                {
                    <input asp-for="Route2Points" readonly class="form-control" />
                }else
                {
                    <input asp-for="Route2Points" class="form-control" />
                }
                
                <span asp-validation-for="Route2Points" class="text-danger"></span>
            </div>
            <div style="display: none;" class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="IsAcceptedRoute2" /> @Html.DisplayNameFor(model => model.IsAcceptedRoute2)
                </label>
            </div>
            @* <div class="form-group">
                <label asp-for="DateRoute3" class="control-label"></label>
                <input asp-for="DateRoute3" type="date" class="form-control" />
                <span asp-validation-for="DateRoute3" class="text-danger"></span>
            </div> *@
            <div class="form-group">
                <label asp-for="RouteLead3Points" class="control-label"></label>
                <h7>
                    @if (listaMaxValue.Count > 2)
                    {
                        <span>Maksymalna ilość punktów: <strong>@listaMaxValue[2]</strong></span>
                    }
                </h7>
                @if (Model.IsAcceptedRoute3)
                {
                    <input asp-for="RouteLead3Points" readonly class="form-control" />
                }
                else
                {
                    <input asp-for="RouteLead3Points" class="form-control" />
                }
                <span asp-validation-for="RouteLead3Points" class="text-danger"></span>
            </div>
            <div style="display: none;" class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="IsAcceptedRoute3" /> @Html.DisplayNameFor(model => model.IsAcceptedRoute3)
                </label>
            </div>
            @* <div class="form-group">
                <label asp-for="UserStageUserId" class="control-label"></label>
                <select asp-for="UserStageUserId" class="form-control" asp-items="ViewBag.UserStageUserId"></select>
                <span asp-validation-for="UserStageUserId" class="text-danger"></span>
            </div> *@
            <input type="hidden" asp-for="UserStageUserId" value="@userId" />
            <div class="form-group">
                <input type="submit" value="Zapisz" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="IndexUser">Powrót</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
